<?php

/**
 * @file
 * Main module file for Classy Paragraphs.
 */

use \Drupal\Component\Utility\Html;
use \Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_field_widget_PLUGIN_ID_form_alter().
 */
function classier_paragraphs_field_widget_entity_reference_paragraphs_form_alter(&$element, &$form_state, &$context) {
  $element['#attached']['library'][] = 'classier_paragraphs/classier_paragraphs.admin';
}

/**
 * Prepares variables for paragraph templates.
 *
 * Default template: paragraph.html.twig.
 *
 * Most themes use their own copy of paragraph.html.twig. The default is located
 * inside "templates/paragraph.html.twig". Look in there for the
 * full list of variables.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - paragraph: The paragraph object.
 *   - view_mode: View mode; e.g., 'full', 'teaser'...
 */
function classier_paragraphs_preprocess_paragraph(&$variables) {
  if (!isset($variables['attributes']['class'])) {
    $variables['attributes']['class'] = [];
  }
  $classes = classier_paragraphs_get_classes($variables['paragraph']);
  $variables['attributes']['class'] = array_merge($variables['attributes']['class'], $classes);
}

/**
 * Get class names from paragraph item.
 *
 * @param Paragraph $paragraph
 * @return array
 */
function classier_paragraphs_get_classes(Paragraph $paragraph) {
  $field_definitions = $paragraph->getFieldDefinitions();
  $instances = field_entity_bundle_field_info($paragraph->getEntityType(), $paragraph->getType(), $field_definitions);

  foreach ($instances as $instance) {
    if ($instance->getType() == 'classier_paragraphs') {
      $field = $paragraph->get($instance->getName());

      if ($field->count()) {
        $items = $field->get(0)->getValue();

        // Filter out internal keys starting with '_'.
        return array_filter($items, function ($key) {
          return substr($key, 0, 1) !== '_';
        }, ARRAY_FILTER_USE_KEY);
      }
    }
  }

  return array();
}
